version: '3.2'

services:
    reverse-proxy:
        build:
            context: .
            dockerfile: traefik.dockerfile
        ports:
            - 80:80
        networks:
            - reverse-proxy
            - api
            - client-database
        volumes:
            - ${PWD}/traefik:/etc/traefik/
            - /var/run/docker.sock:/var/run/docker.sock
        restart: always
        container_name: reverse-proxy

    api:
        build:
            context: '../../'
            dockerfile: docker/local/api.dockerfile
            args:
                USER_HOST: ${USER_HOST}
                UID_HOST: ${UID_HOST}
        environment:
            DATASOURCE_URL: ${DATASOURCE_URL}
            DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
            DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=api"
            - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
            - "traefik.http.middlewares.api-replace-prefix.stripprefix.prefixes=/api"
            - "traefik.http.middlewares.api-cors-headers.headers.customresponseheaders.Access-Control-Allow-Origin=*"
            - "traefik.http.middlewares.api-cors-headers.headers.customresponseheaders.Access-Control-Allow-Methods=GET,POST,PATCH,PUT,DELETE,OPTIONS"
            - "traefik.http.middlewares.api-cors-headers.headers.customresponseheaders.Access-Control-Allow-Headers=Content-Type,Authorization"
            - "traefik.http.middlewares.api-cors-headers.headers.customresponseheaders.Access-Control-Allow-Credentials=false"
            - "traefik.http.routers.api.middlewares=api-replace-prefix@docker,api-cors-headers@docker"
            - "traefik.http.routers.api.entrypoints=web"
            - "traefik.http.routers.api.tls=false"
            - "traefik.http.services.api.loadbalancer.server.port=8080"
        networks:
            - api
            - database
        volumes:
            - ${PWD}/../../:/app
            - /var/run/docker.sock:/var/run/docker.sock
            - "${PERSISTENT_STORAGE}/maven-dependency:/root"
        restart: always
        container_name: api

    database:
        build:
            context: .
            dockerfile: database.dockerfile
        environment:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ROOT_PASSWORD: ${DATASOURCE_PASSWORD}
            MYSQL_DATABASE: finance-tracker
        networks:
            - database
        volumes:
            - ${PERSISTENT_STORAGE}/database:/var/lib/mysql
        restart: on-failure
        container_name: database

    client-database:
        build:
            context: ${PWD}/client-database
            dockerfile: adminer.dockerfile
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=client-database"
            - "traefik.http.routers.client-database.rule=PathPrefix(`/database`, `/client-database-resource`)"
            - "traefik.http.routers.client-database.entrypoints=web"
            - "traefik.http.routers.client-database.tls=false"
            - "traefik.http.services.client-database.loadbalancer.server.port=8080"
        networks:
            - client-database
            - database
        restart: always
        container_name: client-database


networks:
    api:
        name: api
    reverse-proxy:
        name: reverse-proxy
    database:
        name: database
    client-database:
        name: client-database